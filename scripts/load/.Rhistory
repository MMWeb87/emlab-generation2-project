skip = 1) %>%
select(time_interval, load)
# taking average over every hour (from quarterly hours)
data <- data %>%
mutate(
date = as.Date(str_sub(time_interval, 1, 10), format = "%d.%m.%Y"),
time = as.numeric(str_sub(time_interval, 12, 13))) %>%
group_by(date, time) %>%
summarise(average_load = mean(load))
data %>%
add_column(country = !!country)
}
load_countries = c("BE", "DE", "FR", "LU", "NL")
parse_load_data("DE")
map(load_countries, parse_load_data)
parse_load_data <- function(country){
data <- read_csv(
file = paste0("ENTSOE data/ENTSOE_load_2015_", country, ".csv"),
col_names = c("time_interval", "forecast", "load"), # times all in CET
skip = 1) %>%
select(time_interval, load)
# taking average over every hour (from quarterly hours)
data <- data %>%
mutate(
date = as.Date(str_sub(time_interval, 1, 10), format = "%d.%m.%Y"),
time = as.numeric(str_sub(time_interval, 12, 13))) %>%
group_by(date, time) %>%
summarise(average_load = mean(load, na.rm = TRUE))
data %>%
add_column(country = !!country)
}
load_countries = c("BE", "DE", "FR", "LU", "NL")
all_data <- map(load_countries, parse_load_data)
all_data %>%
reduce(append)
all_data %>%
reduce(bind_rows)
all_data %>%
ungroup() %>%
reduce(bind_rows)
parse_load_data <- function(country){
data <- read_csv(
file = paste0("ENTSOE data/ENTSOE_load_2015_", country, ".csv"),
col_names = c("time_interval", "forecast", "load"), # times all in CET
skip = 1) %>%
select(time_interval, load)
# taking average over every hour (from quarterly hours)
data <- data %>%
mutate(
date = as.Date(str_sub(time_interval, 1, 10), format = "%d.%m.%Y"),
time = as.numeric(str_sub(time_interval, 12, 13))) %>%
group_by(date, time) %>%
summarise(average_load = mean(load, na.rm = TRUE))
data %>%
ungroup() %>%
add_column(country = !!country)
}
load_countries = c("BE", "DE", "FR", "LU", "NL")
all_data <- map(load_countries, parse_load_data)
all_data %>%
reduce(bind_rows)
summary(all_data)
all_data <- map(load_countries, parse_load_data) %>% reduce(bind_rows)
summary(all_data)
table(all_data$country)
all_data <- map(load_countries, parse_load_data) %>%
reduce(bind_rows) %>%
mutate(country = as_factor(country))
table(all_data$country)
summary(all_data)
load_DE <- all_data %>%
filter(country == "DE")
load_BENELUX_FR <- all_data %>%
filter(country %in% c(BE, NL, LU, FR)) %>%
group_by(date, time) %>%
summarise(average_load = sum(average_load)) %>%
ungroup()
load_BENELUX_FR <- all_data %>%
filter(country %in% c("BE", "NL", "LU", "FR")) %>%
group_by(date, time) %>%
summarise(average_load = sum(average_load)) %>%
ungroup()
summary(load_BENELUX_FR)
summary(load_DE)
load_DE <- all_data %>%
filter(country == "DE") %>%
select(-country)
summary(load_DE)
summary(load_BENELUX_FR)
summary(load_DE)
load_BENELUX_FR %>%
filter(is.na(average_load))
# treat NA
all_data %>%
filter(is.na(average_load))
# remove 29th
all_data <- all_data %>%
filter(date != "2015-03-29")
all_data
load_DE <- all_data %>%
filter(country == "DE") %>%
select(-country)
load_BENELUX_FR <- all_data %>%
filter(country %in% c("BE", "NL", "LU", "FR")) %>%
group_by(date, time) %>%
summarise(average_load = sum(average_load)) %>%
ungroup()
summary(load_BENELUX_FR)
summary(load_DE)
load_BENELUX_FR <- all_data %>%
filter(country %in% c("BE", "NL", "LU", "FR")) %>%
group_by(date, time) %>%
summarise(average_load = sum(average_load, na.rm = TRUE)) %>%
ungroup()
summary(load_BENELUX_FR)
summary(load_DE)
load_DE
load_DE %>%
select(time, average_load) %>%
spread(key = time, value = average_load)
load_DE %>%
select(time, average_load) %>%
spread(key = "time", value = "average_load")
summary(all_data)
as.Date("2015-03-29")
str(as.Date("2015-03-29"))
parse_load_data <- function(country){
data <- read_csv(
file = paste0("ENTSOE data/ENTSOE_load_2015_", country, ".csv"),
col_names = c("time_interval", "forecast", "load"), # times all in CET
skip = 1) %>%
select(time_interval, load)
# taking average over every hour (from quarterly hours)
data <- data %>%
mutate(
date = as.Date(str_sub(time_interval, 1, 10), format = "%d.%m.%Y"),
time = as.numeric(str_sub(time_interval, 12, 13))) %>%
group_by(date, time) %>%
summarise(average_load = mean(load, na.rm = TRUE))
data %>%
ungroup() %>%
add_column(country = !!country)
}
all_data <- map(load_countries, parse_load_data) %>%
reduce(bind_rows) %>%
mutate(country = as_factor(country))
summary(all_data)
# treat NA
all_data %>%
filter(is.na(average_load))
# remove 29th
all_data_filtered <- all_data %>%
filter(date != as.Date("2015-03-29"))
all_data_filtered
summary(all_data_filtered)
all_data_filtered
nrow(all_data_filtered)
load_DE <- all_data_filtered %>%
filter(country == "DE") %>%
select(-country)
nrow(load_DE)
nrow(load_DE)
all_data_filtered
View(all_data_filtered)
# add hours of year
table(all_data_filtered, time)
# add hours of year
table(all_data_filtered$date, all_data_filtered$time)
all_data_filtered$date
unique(all_data_filtered$date)
all_data_filtered$date
all_data_filtered
all_data_filtered %>%
mutate(month = Month(date))
library(lubridate)
all_data_filtered %>%
mutate(month = Month(date))
all_data_filtered %>%
mutate(month = month(date))
all_data_filtered %>%
mutate(month = month(date)) %>%
group_by(month) %>%
count()
all_data_filtered %>%
mutate(month = month(date)) %>%
filter(country == "DE") %>%
group_by(month) %>%
count()
all_data_filtered %>%
mutate(month = month(date)) %>%
filter(country == "DE") %>%
group_by(month, time) %>%
count()
all_data_filtered %>%
mutate(month = month(date)) %>%
filter(country == "DE") %>%
group_by(month, time) %>%
count() %>%
View()
# treat NA
all_data %>%
filter(is.na(average_load))
# remove 29th
all_data_filtered <- all_data %>%
filter(date != as.Date("2015-02-29"))
# add hours of year
table(all_data_filtered$date, all_data_filtered$time)
unique(all_data_filtered$date)
all_data_filtered %>%
mutate(month = month(date)) %>%
filter(country == "DE") %>%
group_by(month, time) %>%
count() %>%
View()
parse_load_data <- function(country){
data <- read_csv(
file = paste0("ENTSOE data/ENTSOE_load_2015_", country, ".csv"),
col_names = c("time_interval", "forecast", "load"), # times all in CET
skip = 1) %>%
select(time_interval, load)
# taking average over every hour (from quarterly hours)
data <- data %>%
mutate(
date = as.Date(str_sub(time_interval, 1, 10), format = "%d.%m.%Y"),
time = as.numeric(str_sub(time_interval, 12, 13))) %>%
group_by(date, time) %>%
summarise(average_load = mean(load, na.rm = TRUE))
data %>%
ungroup() %>%
add_column(country = !!country)
}
all_data <- map(load_countries, parse_load_data) %>%
reduce(bind_rows) %>%
mutate(country = as_factor(country))
all_data %>%
mutate(month = month(date)) %>%
filter(country == "DE") %>%
group_by(month, time) %>%
count() %>%
View()
# treat NA
all_data %>%
filter(is.na(average_load))
# treat missing entries
all_data %>%
filter(is.na(average_load))
# treat missing entries
missing_data <- all_data %>%
filter(is.na(average_load))
missing_data
replacement_data_for_missing_data <- missing_data %>%
mutate(time = time - 1)
replacement_data_for_missing_data
replacement_data_for_missing_data <- missing_data %>%
select(date, time, country) %>%
mutate(time = time - 1) # just take the same as before
replacement_data_for_missing_data
missing_data %>%
left_join(replacement_data_for_missing_data)
missing_data %>%
right_join(replacement_data_for_missing_data)
missing_data %>%
right_join(replacement_data_for_missing_data)
replacement_data_for_missing_data
missing_data %>%
filter(replacement_data_for_missing_data)
all_data %>%
filter(date == as.Date("2015-03-29"), time == 1)
all_data %>%
filter(date == as.Date("2015-03-29"), time == 2) <-
all_data %>%
filter(date == as.Date("2015-03-29"), time == 1)
load_countries = c("BE", "DE", "FR", "LU", "NL")
parse_load_data <- function(country){
data <- read_csv(
file = paste0("ENTSOE data/ENTSOE_load_2015_", country, ".csv"),
col_names = c("time_interval", "forecast", "load"), # times all in CET
skip = 1) %>%
select(time_interval, load)
# taking average over every hour (from quarterly hours)
data <- data %>%
mutate(
date = as.Date(str_sub(time_interval, 1, 10), format = "%d.%m.%Y"),
time = as.numeric(str_sub(time_interval, 12, 13))) %>%
group_by(date, time) %>%
summarise(average_load = mean(load, na.rm = TRUE))
data %>%
ungroup() %>%
add_column(country = !!country)
}
all_data <- map(load_countries, parse_load_data) %>%
reduce(bind_rows) %>%
mutate(country = as_factor(country))
summary(all_data)
all_data %>%
mutate(month = month(date)) %>%
filter(country == "DE") %>%
group_by(month, time) %>%
count() %>%
View()
summary(all_data)
all_data %>%
mutate(month = month(date)) %>%
filter(country == "DE") %>%
group_by(month, time) %>%
count() %>%
View()
all_data %>%
mutate(month = month(date)) %>%
filter(country == "DE") %>%
group_by(month, date) %>%
count() %>%
View()
reference_data <- read_csv("/Users/marcmel/Development/java-projects/emlab-generation2/resources/data/ldcNLDE-hourly.csv")
reference_data <- read_csv("/Users/marcmel/Development/java-projects/emlab-generation2/resources/data/ldcNLDE-hourly.csv", col_names = F)
summary(reference_data)
ncol(reference_data)
reference_data$X1
load_DE <- all_data %>%
filter(country == "DE") %>%
select(-country)
load_DE <- all_data %>%
filter(country == "DE") %>%
select(-country) %>%
add_column(hour = seq(1:8760))
head(load_DE)
tail(load_DE)
load_DE <- all_data %>%
filter(country == "DE") %>%
select(-country) %>%
ungroup() %>%
add_column(hour = seq(1:8760))
load_BENELUX_FR <- all_data %>%
filter(country %in% c("BE", "NL", "LU", "FR")) %>%
group_by(date, time) %>%
summarise(average_load = sum(average_load, na.rm = TRUE)) %>%  # TODO: what to do with MISSING data? May be wrong
ungroup() %>%
add_column(hour = seq(1:8760))
load_BENELUX_FR
load_DE <- all_data %>%
filter(country == "DE") %>%
select(-country) %>%
ungroup() %>%
add_column(
hour = seq(1:8760),
country = "DE")
load_DE
map(load_countries, function(country){
load_DE <- all_data %>%
filter(country == !!country) %>%
select(-country) %>%
ungroup() %>%
add_column(
hour = seq(1:8760),
country = country)
}
)
map_dfr(load_countries, function(country){
load_DE <- all_data %>%
filter(country == !!country) %>%
select(-country) %>%
ungroup() %>%
add_column(
hour = seq(1:8760),
country = country) %>%
spread(key = hour, value = average_load)
}
)
map_dfr(load_countries, function(country){
load_DE <- all_data %>%
filter(country == !!country) %>%
select(-country) %>%
ungroup() %>%
add_column(
hour = seq(1:8760)) %>%
select(hour, average_load) %>%
spread(key = hour, value = average_load)
}, .id = country
)
map_dfr(load_countries, function(country){
load_DE <- all_data %>%
filter(country == !!country) %>%
select(-country) %>%
ungroup() %>%
add_column(
hour = seq(1:8760)) %>%
select(hour, average_load) %>%
spread(key = hour, value = average_load)
}, .id = "country"
)
load_countries
load_countries = c(
BE = "BE",
DE= "DE",
FR = "FR",
LU = "LU",
NL = "NL")
map_dfr(load_countries, function(country){
load_DE <- all_data %>%
filter(country == !!country) %>%
select(-country) %>%
ungroup() %>%
add_column(
hour = seq(1:8760)) %>%
select(hour, average_load) %>%
spread(key = hour, value = average_load)
}, .id = "country"
)
load_BENELUX_FR <- all_data %>%
filter(country %in% c("BE", "NL", "LU", "FR")) %>%
group_by(date, time) %>%
summarise(average_load = sum(average_load, na.rm = TRUE)) %>%  # TODO: what to do with MISSING data? May be wrong
ungroup() %>%
add_column(
hour = seq(1:8760),
country = "BENELUX_FR") %>%
sread(key = hour, value = average_load)
load_BENELUX_FR <- all_data %>%
filter(country %in% c("BE", "NL", "LU", "FR")) %>%
group_by(date, time) %>%
summarise(average_load = sum(average_load, na.rm = TRUE)) %>%  # TODO: what to do with MISSING data? May be wrong
ungroup() %>%
add_column(
hour = seq(1:8760),
country = "BENELUX_FR") %>%
spread(key = hour, value = average_load)
load_BENELUX_FR
load_BENELUX_FR <- all_data %>%
filter(country %in% c("BE", "NL", "LU", "FR")) %>%
group_by(date, time) %>%
summarise(average_load = sum(average_load, na.rm = TRUE)) %>%  # TODO: what to do with MISSING data? May be wrong
ungroup() %>%
add_column(hour = seq(1:8760)) %>%
select(hour, average_load) %>%
spread(key = hour, value = average_load) %>%
add_column(country  = "BENELUX_FR")
load_BENELUX_FR
final_load_df <- final_load_df %>%
bind_rows(load_BENELUX_FR)
final_load_df
final_load_df <- map_dfr(load_countries, function(country){
load_DE <- all_data %>%
filter(country == !!country) %>%
select(-country) %>%
ungroup() %>%
add_column(
hour = seq(1:8760)) %>%
select(hour, average_load) %>%
spread(key = hour, value = average_load)
}, .id = "country"
)
load_BENELUX_FR <- all_data %>%
filter(country %in% c("BE", "NL", "LU", "FR")) %>%
group_by(date, time) %>%
summarise(average_load = sum(average_load, na.rm = TRUE)) %>%  # TODO: what to do with MISSING data? May be wrong
ungroup() %>%
add_column(hour = seq(1:8760)) %>%
select(hour, average_load) %>%
spread(key = hour, value = average_load) %>%
add_column(country  = "BENELUX_FR")
final_load_df <- final_load_df %>%
bind_rows(load_BENELUX_FR)
final_load_df
write_csv(final_load_df)
write_csv(x = final_load_df, path = "load_values.csv")
write_csv(x = final_load_df, path = "entsoe_hourly_load_2015_DE_FR_BENELUX.csv")
all_data
all_data
# Combine for paper -------------------------------------------------------
all_data %>%
filter(country %in% c("BE", "NL", "LU", "FR")) %>%
group_by(date, time) %>%
summarise(average_load = sum(average_load, na.rm = TRUE)) %>%
ungroup() %>%
final_load_df <- map_dfr(load_countries, function(country){
load_DE <- all_data %>%
filter(country == !!country) %>%
add_column(hour = seq(1:8760)) %>%
select(hour, average_load) %>%
spread(key = hour, value = average_load)
}, .id = "country"
)
all_data_and_aggregate <- all_data %>%
bind_rows(
all_data %>%
filter(country %in% c("BE", "NL", "LU", "FR")) %>%
group_by(date, time) %>%
summarise(average_load = sum(average_load, na.rm = TRUE)) %>%
ungroup() %>%
add_column(country  = "BENELUX_FR")
)
all_data_and_aggregate
summary(all_data_and_aggregate)
tail(all_data_and_aggregate)
final_load_df <- map_dfr(load_countries, function(country){
all_data_and_aggregate %>%
filter(country == !!country) %>%
add_column(hour = seq(1:8760)) %>%
select(hour, average_load) %>%
spread(key = hour, value = average_load)
}, .id = "country"
)
write_csv(x = final_load_df, path = "entsoe_hourly_load_2015_DE_FR_BENELUX_2.csv")
final_load_df <- map_dfr(c(load_countries, BENELUX_FR = "BENELUX_FR"), function(country){
all_data_and_aggregate %>%
filter(country == !!country) %>%
add_column(hour = seq(1:8760)) %>%
select(hour, average_load) %>%
spread(key = hour, value = average_load)
}, .id = "country"
)
write_csv(x = final_load_df, path = "entsoe_hourly_load_2015_DE_FR_BENELUX_2.csv")
