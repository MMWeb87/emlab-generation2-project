remove(list = ls()[ls() != "params"])
#knitr::opts_knit$set(root.dir = rprojroot::find_rstudio_root_file())
knitr::opts_knit$set(root.dir = "/Users/marcmel/Documents/PhD/Papers/03 Conjoint PhD paper 1/Analysis/")
# /usr/local/bin/pandoc +RTS -K512m -RTS _main.md --to docx --from markdown+autolink_bare_uris+ascii_identifiers+tex_math_single_backslash+smart --output paper_draft.docx --highlight-style tango --reference-doc aux/paper-template-marc.docx --csl aux/energy-policy.csl --filter /usr/local/bin/pandoc-citeproc
library(tidyverse)
library(tidyverse)
investors <- c("Small", "Medium", "Large", "Very large")
uval <- function(segment, attribute, level, df = means_for_abm){
df %>%
filter(segment == !!segment, attribute == !!attribute, level == !!level) %>%
pull(mean)
}
country = "DE"
for(segment in investors){
filename <- paste0("missing-unavailable-one-interaction-partial-constrained_", segment, ".csv")
data <- read_csv(paste0("/Users/marcmel/Documents/PhD/Papers/03 Conjoint PhD paper 1/Analysis/output/tables/utility_table/main/", filename))
browser()
agentName <- glue("Pref Investor {segment} {country}")
objectName <- glue("prefInvestors{segment}{country}")
print(glue('
EnergyProducer {objectName} = reps.createEnergyProducer();
{objectName}.setName("{agentName}");
{objectName}.setNumberOfYearsBacklookingForForecasting(5);
{objectName}.setPriceMarkUp(1.0);
{objectName}.setWillingToInvest(true);
{objectName}.setDownpaymentFractionOfCash(.5);
{objectName}.setDismantlingRequiredOperatingProfit(0);
{objectName}.setDismantlingProlongingYearsAfterTechnicalLifetime(0);
{objectName}.setDebtRatioOfInvestments(0.7);
{objectName}.setLoanInterestRate(0.1);
{objectName}.setEquityInterestRate(0.1);
{objectName}.setPastTimeHorizon(5);
{objectName}.setInvestmentFutureTimeHorizon(7);
{objectName}.setLongTermContractPastTimeHorizon(3);
{objectName}.setLongTermContractMargin(0.1);
{objectName}.setCash(3e9);
{objectName}.setInvestmentRole(preferenceInvestmentRole);
preferenceMap = new HashMap<>();
preferenceMap.put(utilityLevelsCountryOwn, 			{uval(segment, "Country","Own")});
preferenceMap.put(utilityLevelsCountryKnown, 		{uval(segment, "Country","Known EU")});
preferenceMap.put(utilityLevelsCountryUnknown, 	  {uval(segment, "Country","Unknown EU")});
{objectName}.setUtilityCountry(preferenceMap);
preferenceMap = new HashMap<>();
preferenceMap.put(utilityLevelsReturn5, 			{uval(segment, "Return","5%")});
preferenceMap.put(utilityLevelsReturn6, 			{uval(segment, "Return","6%")});
preferenceMap.put(utilityLevelsReturn7, 			{uval(segment, "Return","7%")});
{objectName}.setUtilityReturn(preferenceMap);
preferenceMap = new HashMap<>();
preferenceMap.put(utilityLevelsPolicyFIT, 			{uval(segment, "Policy","FIT")});
preferenceMap.put(utilityLevelsPolicyAuction, 		{uval(segment, "Policy","Prem. auc.")});
preferenceMap.put(utilityLevelsPolicyNone, 			{uval(segment, "Policy","No support")});
{objectName}.setUtilityPolicy(preferenceMap);
preferenceMap = new HashMap<>();
preferenceMap.put(utilityLevelsTechnologyPV, 		{uval(segment, "Technology","PV")});
preferenceMap.put(utilityLevelsTechnologyOnshore, 	{uval(segment, "Technology","Onshore")});
preferenceMap.put(utilityLevelsTechnologyOffshore, 	{uval(segment, "Technology","Offshore")});
{objectName}.setUtilityTechnology(preferenceMap);
HashSet<ElectricitySpotMarket> potentialInvestorMarkets = new HashSet<>();
potentialInvestorMarkets.add(netherlandsElectricitySpotMarket);
potentialInvestorMarkets.add(germanyElectricitySpotMarket);
{objectName}.setInvestorMarket(netherlandsElectricitySpotMarket);
{objectName}.setPotentialInvestorMarkets(potentialInvestorMarkets);
'
))
}
data
q
uval <- function(segment, attribute, level, df = means_for_abm){
df %>%
filter(segment == !!segment, attribute == !!attribute, level == !!level) %>%
pull(mean)
}
country = "DE"
for(segment in investors){
filename <- paste0("missing-unavailable-one-interaction-partial-constrained_", segment, ".csv")
data <- read_csv(paste0("/Users/marcmel/Documents/PhD/Papers/03 Conjoint PhD paper 1/Analysis/output/tables/utility_table/main/", filename))
browser()
agentName <- glue("Pref Investor {segment} {country}")
objectName <- glue("prefInvestors{segment}{country}")
print(glue('
EnergyProducer {objectName} = reps.createEnergyProducer();
{objectName}.setName("{agentName}");
{objectName}.setNumberOfYearsBacklookingForForecasting(5);
{objectName}.setPriceMarkUp(1.0);
{objectName}.setWillingToInvest(true);
{objectName}.setDownpaymentFractionOfCash(.5);
{objectName}.setDismantlingRequiredOperatingProfit(0);
{objectName}.setDismantlingProlongingYearsAfterTechnicalLifetime(0);
{objectName}.setDebtRatioOfInvestments(0.7);
{objectName}.setLoanInterestRate(0.1);
{objectName}.setEquityInterestRate(0.1);
{objectName}.setPastTimeHorizon(5);
{objectName}.setInvestmentFutureTimeHorizon(7);
{objectName}.setLongTermContractPastTimeHorizon(3);
{objectName}.setLongTermContractMargin(0.1);
{objectName}.setCash(3e9);
{objectName}.setInvestmentRole(preferenceInvestmentRole);
preferenceMap = new HashMap<>();
preferenceMap.put(utilityLevelsCountryOwn, 			{uval(segment, "Country","Own")});
preferenceMap.put(utilityLevelsCountryKnown, 		{uval(segment, "Country","Known EU")});
preferenceMap.put(utilityLevelsCountryUnknown, 	  {uval(segment, "Country","Unknown EU")});
{objectName}.setUtilityCountry(preferenceMap);
preferenceMap = new HashMap<>();
preferenceMap.put(utilityLevelsReturn5, 			{uval(segment, "Return","5%")});
preferenceMap.put(utilityLevelsReturn6, 			{uval(segment, "Return","6%")});
preferenceMap.put(utilityLevelsReturn7, 			{uval(segment, "Return","7%")});
{objectName}.setUtilityReturn(preferenceMap);
preferenceMap = new HashMap<>();
preferenceMap.put(utilityLevelsPolicyFIT, 			{uval(segment, "Policy","FIT")});
preferenceMap.put(utilityLevelsPolicyAuction, 		{uval(segment, "Policy","Prem. auc.")});
preferenceMap.put(utilityLevelsPolicyNone, 			{uval(segment, "Policy","No support")});
{objectName}.setUtilityPolicy(preferenceMap);
preferenceMap = new HashMap<>();
preferenceMap.put(utilityLevelsTechnologyPV, 		{uval(segment, "Technology","PV")});
preferenceMap.put(utilityLevelsTechnologyOnshore, 	{uval(segment, "Technology","Onshore")});
preferenceMap.put(utilityLevelsTechnologyOffshore, 	{uval(segment, "Technology","Offshore")});
{objectName}.setUtilityTechnology(preferenceMap);
HashSet<ElectricitySpotMarket> potentialInvestorMarkets = new HashSet<>();
potentialInvestorMarkets.add(netherlandsElectricitySpotMarket);
potentialInvestorMarkets.add(germanyElectricitySpotMarket);
{objectName}.setInvestorMarket(netherlandsElectricitySpotMarket);
{objectName}.setPotentialInvestorMarkets(potentialInvestorMarkets);
'
))
}
data
uval <- function(segment, attribute, level, df){
df %>%
filter(attribute == !!attribute, level == !!level) %>%
pull(mean)
}
country = "DE"
for(segment in investors){
filename <- paste0("missing-unavailable-one-interaction-partial-constrained_", segment, ".csv")
data <- read_csv(paste0("/Users/marcmel/Documents/PhD/Papers/03 Conjoint PhD paper 1/Analysis/output/tables/utility_table/main/", filename))
agentName <- glue("Pref Investor {segment} {country}")
objectName <- glue("prefInvestors{segment}{country}")
print(glue('
EnergyProducer {objectName} = reps.createEnergyProducer();
{objectName}.setName("{agentName}");
{objectName}.setNumberOfYearsBacklookingForForecasting(5);
{objectName}.setPriceMarkUp(1.0);
{objectName}.setWillingToInvest(true);
{objectName}.setDownpaymentFractionOfCash(.5);
{objectName}.setDismantlingRequiredOperatingProfit(0);
{objectName}.setDismantlingProlongingYearsAfterTechnicalLifetime(0);
{objectName}.setDebtRatioOfInvestments(0.7);
{objectName}.setLoanInterestRate(0.1);
{objectName}.setEquityInterestRate(0.1);
{objectName}.setPastTimeHorizon(5);
{objectName}.setInvestmentFutureTimeHorizon(7);
{objectName}.setLongTermContractPastTimeHorizon(3);
{objectName}.setLongTermContractMargin(0.1);
{objectName}.setCash(3e9);
{objectName}.setInvestmentRole(preferenceInvestmentRole);
preferenceMap = new HashMap<>();
preferenceMap.put(utilityLevelsCountryOwn, 			{uval(segment, "Country","Own",data)});
preferenceMap.put(utilityLevelsCountryKnown, 		{uval(segment, "Country","Known EU",data)});
preferenceMap.put(utilityLevelsCountryUnknown, 	  {uval(segment, "Country","Unknown EU",data)});
{objectName}.setUtilityCountry(preferenceMap);
preferenceMap = new HashMap<>();
preferenceMap.put(utilityLevelsReturn5, 			{uval(segment, "Return","5%",data)});
preferenceMap.put(utilityLevelsReturn6, 			{uval(segment, "Return","6%",data)});
preferenceMap.put(utilityLevelsReturn7, 			{uval(segment, "Return","7%",data)});
{objectName}.setUtilityReturn(preferenceMap);
preferenceMap = new HashMap<>();
preferenceMap.put(utilityLevelsPolicyFIT, 			{uval(segment, "Policy","FIT",data)});
preferenceMap.put(utilityLevelsPolicyAuction, 		{uval(segment, "Policy","Prem. auc.",data)});
preferenceMap.put(utilityLevelsPolicyNone, 			{uval(segment, "Policy","No support",data)});
{objectName}.setUtilityPolicy(preferenceMap);
preferenceMap = new HashMap<>();
preferenceMap.put(utilityLevelsTechnologyPV, 		{uval(segment, "Technology","PV",data)});
preferenceMap.put(utilityLevelsTechnologyOnshore, 	{uval(segment, "Technology","Onshore",data)});
preferenceMap.put(utilityLevelsTechnologyOffshore, 	{uval(segment, "Technology","Offshore",data)});
{objectName}.setUtilityTechnology(preferenceMap);
HashSet<ElectricitySpotMarket> potentialInvestorMarkets = new HashSet<>();
potentialInvestorMarkets.add(netherlandsElectricitySpotMarket);
potentialInvestorMarkets.add(germanyElectricitySpotMarket);
{objectName}.setInvestorMarket(netherlandsElectricitySpotMarket);
{objectName}.setPotentialInvestorMarkets(potentialInvestorMarkets);
'
))
}
library(tidyverse)
library(glue)
investors <- c("Small", "Medium", "Large", "Very large")
uval <- function(segment, attribute, level, df){
df %>%
filter(attribute == !!attribute, level == !!level) %>%
pull(mean)
}
country = "DE"
for(segment in investors){
filename <- paste0("missing-unavailable-one-interaction-partial-constrained_", segment, ".csv")
data <- read_csv(paste0("/Users/marcmel/Documents/PhD/Papers/03 Conjoint PhD paper 1/Analysis/output/tables/utility_table/main/", filename))
agentName <- glue("Pref Investor {segment} {country}")
objectName <- glue("prefInvestors{segment}{country}")
print(glue('
EnergyProducer {objectName} = reps.createEnergyProducer();
{objectName}.setName("{agentName}");
{objectName}.setNumberOfYearsBacklookingForForecasting(5);
{objectName}.setPriceMarkUp(1.0);
{objectName}.setWillingToInvest(true);
{objectName}.setDownpaymentFractionOfCash(.5);
{objectName}.setDismantlingRequiredOperatingProfit(0);
{objectName}.setDismantlingProlongingYearsAfterTechnicalLifetime(0);
{objectName}.setDebtRatioOfInvestments(0.7);
{objectName}.setLoanInterestRate(0.1);
{objectName}.setEquityInterestRate(0.1);
{objectName}.setPastTimeHorizon(5);
{objectName}.setInvestmentFutureTimeHorizon(7);
{objectName}.setLongTermContractPastTimeHorizon(3);
{objectName}.setLongTermContractMargin(0.1);
{objectName}.setCash(3e9);
{objectName}.setInvestmentRole(preferenceInvestmentRole);
preferenceMap = new HashMap<>();
preferenceMap.put(utilityLevelsCountryOwn, 			{uval(segment, "Country","Own",data)});
preferenceMap.put(utilityLevelsCountryKnown, 		{uval(segment, "Country","Known EU",data)});
preferenceMap.put(utilityLevelsCountryUnknown, 	  {uval(segment, "Country","Unknown EU",data)});
{objectName}.setUtilityCountry(preferenceMap);
preferenceMap = new HashMap<>();
preferenceMap.put(utilityLevelsReturn5, 			{uval(segment, "Return","5%",data)});
preferenceMap.put(utilityLevelsReturn6, 			{uval(segment, "Return","6%",data)});
preferenceMap.put(utilityLevelsReturn7, 			{uval(segment, "Return","7%",data)});
{objectName}.setUtilityReturn(preferenceMap);
preferenceMap = new HashMap<>();
preferenceMap.put(utilityLevelsPolicyFIT, 			{uval(segment, "Policy","FIT",data)});
preferenceMap.put(utilityLevelsPolicyAuction, 		{uval(segment, "Policy","Prem. auc.",data)});
preferenceMap.put(utilityLevelsPolicyNone, 			{uval(segment, "Policy","No support",data)});
{objectName}.setUtilityPolicy(preferenceMap);
preferenceMap = new HashMap<>();
preferenceMap.put(utilityLevelsTechnologyPV, 		{uval(segment, "Technology","PV",data)});
preferenceMap.put(utilityLevelsTechnologyOnshore, 	{uval(segment, "Technology","Onshore",data)});
preferenceMap.put(utilityLevelsTechnologyOffshore, 	{uval(segment, "Technology","Offshore",data)});
{objectName}.setUtilityTechnology(preferenceMap);
HashSet<ElectricitySpotMarket> potentialInvestorMarkets = new HashSet<>();
potentialInvestorMarkets.add(netherlandsElectricitySpotMarket);
potentialInvestorMarkets.add(germanyElectricitySpotMarket);
{objectName}.setInvestorMarket(netherlandsElectricitySpotMarket);
{objectName}.setPotentialInvestorMarkets(potentialInvestorMarkets);
'
))
}
source('~/Development/java-projects/emlab-generation2/resources/sources/preferences/read_and_format_utilitydata.R', echo=TRUE)
source('~/Development/java-projects/emlab-generation2/resources/sources/preferences/read_and_format_utilitydata.R', echo=TRUE)
source('~/Development/java-projects/emlab-generation2/resources/sources/preferences/read_and_format_utilitydata.R', echo=TRUE)
source('~/Development/java-projects/emlab-generation2/resources/sources/preferences/read_and_format_utilitydata.R', echo=TRUE)
source('~/Development/java-projects/emlab-generation2/resources/sources/preferences/read_and_format_utilitydata.R', echo=TRUE)
source('~/Development/java-projects/emlab-generation2/resources/sources/preferences/read_and_format_utilitydata.R', echo=TRUE)
