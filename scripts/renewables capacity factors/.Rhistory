region %in% countriesToAnalyse,
between(time, dateTimeStart, dateTimeEnd)) %>%
mutate(
hours = as.double(time - dateTimeStart) / 3600)
myTimeSeriesNinja <- bind_rows(myTimeSeriesNinjaPV, myTimeSeriesNinjaWind)
# Overview:
myTimeSeriesNinja %>%
ggplot(mapping = aes(x = time, y = profile)) +
geom_line() +
facet_grid(technology ~ region)
## PV
# MERRA-2 is better suited for long-term stability and overall consistency,
# SARAH for higher precision on hourly to daily time scales (but it suffers from some missing data)
timeSeriesNinjaPV <- read_csv(file = "ninja_europe_pv_v1/ninja_pv_europe_v1.1_merra2.csv")
myTimeSeriesNinjaPV <- timeSeriesNinjaPV %>%
gather(key = "region", value = "profile", -time) %>%
filter(
region %in% countriesToAnalyse,
between(time, dateTimeStart, dateTimeEnd)) %>%
add_column(technology = "PV")
## Wind
# Taking current for good start in model
# Or do I need weather profiles.
timeSeriesNinjaWind <- read_csv(file = "ninja_europe_wind_v1/ninja_wind_europe_v1.1_current_on-offshore.csv")
source('~/Library/Mobile Documents/com~apple~CloudDocs/Documents/PhD/Papers/05 ABM PhD paper 2/data/timeseries/emlab_timeseries.R', echo=TRUE)
library(tidyverse)
library(lubridate)
countriesToAnalyse <- c("DE","FR", "BE","NL","LU")
# For now I pick 2015, as it is a regulare year with 8760 hour.
dateTimeStart <- as.POSIXct("2015-01-01 00:00:00", tz = "CET")
dateTimeEnd <-  as.POSIXct("2015-12-31 24:00:00", tz = "CET")
## PV
# MERRA-2 is better suited for long-term stability and overall consistency,
# SARAH for higher precision on hourly to daily time scales (but it suffers from some missing data)
timeSeriesNinjaPV <- read_csv(file = "ninja_europe_pv_v1/ninja_pv_europe_v1.1_merra2.csv")
myTimeSeriesNinjaPV <- timeSeriesNinjaPV %>%
gather(key = "region", value = "profile", -time) %>%
filter(
region %in% countriesToAnalyse,
between(time, dateTimeStart, dateTimeEnd)) %>%
add_column(technology = "PV")
## Wind
# Taking current for good start in model
# Or do I need weather profiles.
timeSeriesNinjaWind <- read_csv(file = "ninja_europe_wind_v1/ninja_wind_europe_v1.1_current_on-offshore.csv")
myTimeSeriesNinjaWind <- timeSeriesNinjaWind %>%
gather(key = "region_technology", value = "profile", -time) %>%
separate(region_technology, into = c("region", "technology")) %>%
filter(
region %in% countriesToAnalyse,
between(time, dateTimeStart, dateTimeEnd))
myTimeSeriesNinja <- bind_rows(myTimeSeriesNinjaPV, myTimeSeriesNinjaWind) %>%
mutate(
hours = as.double(time - dateTimeStart) / 3600)
# Overview:
myTimeSeriesNinja %>%
ggplot(mapping = aes(x = hours, y = profile)) +
geom_line() +
facet_grid(technology ~ region)
myTimeSeriesNinja %>%
unite(technology, region, sep = "_")
myTimeSeriesNinja
myTimeSeriesNinja %>%
unite(technology, region, sep = "_", col = "variable")
myTimeSeriesNinja %>%
unite(technology, region, sep = "_", col = "variable") %>%
select(variable, profile, hours) %>%
spread(key = hours, value = profile)
myTimeSeriesNinja %>%
unite(technology, region, sep = "_", col = "variable") %>%
select(variable, profile, hours) %>%
spread(key = hours, value = profile) %>%
write_csv(path = "renewablesNinja2015Profiles.csv")
# ridiculous:
myTimeSeriesNinja %>%
ggplot(mapping = aes(x = hours, y = profile, col = hours)) +
geom_point() +
facet_grid(technology ~ region)
myTimeSeriesNinja %>%
filter(
region == "NL",
technology == "OFF") %>%
mutate(numbers = 0:8760) %>%
ggplot(aes(x = numbers, y = hours)) +
geom_line()
myTimeSeriesNinja %>%
filter(
region == "NL",
technology == "OFF") %>%
mutate(
numbers = 0:8760,
diff = numbers / hours) %>%
group_by(diff) %>%
count()
myTimeSeriesNinja %>%
filter(
region == "NL",
technology == "OFF") %>%
mutate(
numbers = 0:8760,
diff = numbers / hours) %>%
filter(is.na(hours))
myTimeSeriesNinja %>%
filter(
region == "NL",
technology == "OFF") %>%
mutate(
numbers = 0:8760,
diff = numbers / hours) %>%
filter(is.na(numbers))
myTimeSeriesNinja %>%
filter(
region == "NL",
technology == "OFF") %>%
mutate(
numbers = 0:8760,
diff = numbers / hours) %>%
View()
myTimeSeriesNinjaWind <- timeSeriesNinjaWind %>%
gather(key = "region_technology", value = "profile", -time) %>%
separate(region_technology, into = c("region", "technology")) %>%
filter(
region %in% countriesToAnalyse,
time >= dateTimeStart && time < dateTimeEnd)
myTimeSeriesNinjaWind
myTimeSeriesNinjaWind <- timeSeriesNinjaWind %>%
gather(key = "region_technology", value = "profile", -time) %>%
separate(region_technology, into = c("region", "technology")) %>%
filter(
region %in% countriesToAnalyse,
time >= dateTimeStart & time < dateTimeEnd)
myTimeSeriesNinjaWind
tail(myTimeSeriesNinjaWind)
myTimeSeriesNinjaWind <- timeSeriesNinjaWind %>%
gather(key = "region_technology", value = "profile", -time) %>%
separate(region_technology, into = c("region", "technology")) %>%
filter(
region %in% countriesToAnalyse,
between(time, dateTimeStart, dateTimeEnd))
tail(myTimeSeriesNinjaWind)
# For now I pick 2015, as it is a regulare year with 8760 hour.
dateTimeStart <- as.POSIXct("2015-01-01 00:00:00", tz = "CET")
dateTimeEnd <-  as.POSIXct("2015-12-31 23:00:00", tz = "CET")
myTimeSeriesNinjaWind <- timeSeriesNinjaWind %>%
gather(key = "region_technology", value = "profile", -time) %>%
separate(region_technology, into = c("region", "technology")) %>%
filter(
region %in% countriesToAnalyse,
between(time, dateTimeStart, dateTimeEnd))
tail(myTimeSeriesNinjaWind)
myTimeSeriesNinja <- bind_rows(myTimeSeriesNinjaPV, myTimeSeriesNinjaWind) %>%
mutate(
hours = as.double(time - dateTimeStart) / 3600) + 1
myTimeSeriesNinja <- bind_rows(myTimeSeriesNinjaPV, myTimeSeriesNinjaWind) %>%
mutate(
hours = as.double(time - dateTimeStart) / 3600 + 1)
tail(myTimeSeriesNinja)
## PV
# MERRA-2 is better suited for long-term stability and overall consistency,
# SARAH for higher precision on hourly to daily time scales (but it suffers from some missing data)
timeSeriesNinjaPV <- read_csv(file = "ninja_europe_pv_v1/ninja_pv_europe_v1.1_merra2.csv")
myTimeSeriesNinjaPV <- timeSeriesNinjaPV %>%
gather(key = "region", value = "profile", -time) %>%
filter(
region %in% countriesToAnalyse,
between(time, dateTimeStart, dateTimeEnd)) %>%
add_column(technology = "PV")
## Wind
# Taking current for good start in model
# Or do I need weather profiles.
timeSeriesNinjaWind <- read_csv(file = "ninja_europe_wind_v1/ninja_wind_europe_v1.1_current_on-offshore.csv")
myTimeSeriesNinjaWind <- timeSeriesNinjaWind %>%
gather(key = "region_technology", value = "profile", -time) %>%
separate(region_technology, into = c("region", "technology")) %>%
filter(
region %in% countriesToAnalyse,
between(time, dateTimeStart, dateTimeEnd))
myTimeSeriesNinja <- bind_rows(myTimeSeriesNinjaPV, myTimeSeriesNinjaWind) %>%
mutate(
hours = as.double(time - dateTimeStart) / 3600 + 1)
tail(myTimeSeriesNinja)
# Overview:
myTimeSeriesNinja %>%
ggplot(mapping = aes(x = hours, y = profile)) +
geom_line() +
facet_grid(technology ~ region)
countriesToAnalyse <- c("DE","FR", "BE","NL","LU")
# For now I pick 2015, as it is a regulare year with 8760 hour.
dateTimeStart <- as.POSIXct("2015-01-01 00:00:00", tz = "CET")
dateTimeEnd <-  as.POSIXct("2015-12-31 23:00:00", tz = "CET")
# Loading timeseries from https://data.open-power-system-data.org/time_series/2019-06-05
library(tidyverse)
library(lubridate)
countriesToAnalyse <- c("DE","FR", "BE","NL","LU")
# For now I pick 2015, as it is a regulare year with 8760 hour.
dateTimeStart <- as.POSIXct("2015-01-01 00:00:00", tz = "CET")
dateTimeEnd <-  as.POSIXct("2015-12-31 23:00:00", tz = "CET")
# Opendata ----------------------------------------------------------------
# https://data.open-power-system-data.org/time_series/2019-06-05
# timeSeries <- read_csv(file = "time_series_60min_stacked.csv")
#
# timeSeries %>%
#   select(region, attribute) %>%
#   filter(attribute == "profile") %>%
#   group_by(region, attribute) %>%
#   count() %>%
#   View()
#
# usefulTimeSeries <- timeSeries %>%
#   filter(
#     between(utc_timestamp, dateTimeStart, dateTimeEnd),
#     region %in% c("DE","FR", "BE","NL","LU"),
#     attribute %in% c("profile", "actual_entsoe_power_statistics", "actual_entsoe_transparency", "actual_tso")
#     )
# Renewables Ninja Data ---------------------------------------------------
# https://www.renewables.ninja/downloads
## PV
# MERRA-2 is better suited for long-term stability and overall consistency,
# SARAH for higher precision on hourly to daily time scales (but it suffers from some missing data)
timeSeriesNinjaPV <- read_csv(file = "input/ninja_europe_pv_v1/ninja_pv_europe_v1.1_merra2.csv")
myTimeSeriesNinjaPV <- timeSeriesNinjaPV %>%
gather(key = "region", value = "profile", -time) %>%
filter(
region %in% countriesToAnalyse,
between(time, dateTimeStart, dateTimeEnd)) %>%
add_column(technology = "PV")
## Wind
# Taking current for good start in model
# Or do I need weather profiles.
timeSeriesNinjaWind <- read_csv(file = "input/ninja_europe_wind_v1/ninja_wind_europe_v1.1_current_on-offshore.csv")
#timeSeriesNinjaONWind <- read_csv(file = "ninja_europe_wind_v1/ninja_wind_europe_v1.1_current_national.csv")
myTimeSeriesNinjaWind <- timeSeriesNinjaWind %>%
gather(key = "region_technology", value = "profile", -time) %>%
separate(region_technology, into = c("region", "technology")) %>%
filter(
region %in% countriesToAnalyse,
between(time, dateTimeStart, dateTimeEnd))
myTimeSeriesNinja <- bind_rows(myTimeSeriesNinjaPV, myTimeSeriesNinjaWind) %>%
mutate(
hours = as.double(time - dateTimeStart) / 3600 + 1)
tail(myTimeSeriesNinja)
# Overview:
myTimeSeriesNinja %>%
ggplot(mapping = aes(x = hours, y = profile)) +
geom_line() +
facet_grid(technology ~ region)
myTimeSeriesNinja %>%
filter(
region == "NL",
technology == "OFF") %>%
mutate(
numbers = 0:8760,
diff = numbers / hours) %>%
View()
# Output
myTimeSeriesNinja %>%
unite(technology, region, sep = "_", col = "variable") %>%
select(variable, profile, hours) %>%
spread(key = hours, value = profile) %>%
write_csv(path = "renewablesNinja2015Profiles.csv")
myTimeSeriesNinja %>%
filter(
region == "NL",
technology == "OFF") %>%
mutate(
numbers = 1:8760,
diff = numbers / hours) %>%
View()
myTimeSeriesNinja %>%
unite(technology, region, sep = "_", col = "variable") %>%
select(variable, profile, hours) %>%
spread(key = hours, value = profile) %>%
write_csv(path = "output/renewablesNinja2015Profiles.csv")
myTimeSeriesNinja %>%
unite(technology, region, sep = "_", col = "lengthInHours") %>%
select(variable, profile, hours) %>%
spread(key = hours, value = profile) %>%
write_csv(path = "output/renewablesNinja2015Profiles.csv")
myTimeSeriesNinja %>%
unite(technology, region, sep = "_", col = "lengthInHours") %>%
select(lengthInHours, profile, hours) %>%
spread(key = hours, value = profile) %>%
write_csv(path = "output/renewablesNinja2015Profiles.csv")
myTimeSeriesNinja %>%
unite(technology, region, sep = "_", col = "variable") %>%
select(variable, profile, hours) %>%
spread(key = hours, value = profile) %>%
rename(lengthInHours = variable) %>%
write_csv(path = "output/renewablesNinja2015Profiles.csv")
library(tidyverse)
library(lubridate)
countriesToAnalyse <- c("DE","FR", "BE","NL","LU")
# For now I pick 2015, as it is a regulare year with 8760 hour.
dateTimeStart <- as.POSIXct("2015-01-01 00:00:00", tz = "CET")
dateTimeEnd <-  as.POSIXct("2015-12-31 23:00:00", tz = "CET")
dateTimeStart
dateTimeEnd
as.POSIXct("2015-01-01 00:00:00", tz = "CET")
as.POSIXct("2015-01-01 23:00:00", tz = "CET")
as.POSIXct("2015-01-01 23:00:00", tz = "GMT")
## PV
# MERRA-2 is better suited for long-term stability and overall consistency,
# SARAH for higher precision on hourly to daily time scales (but it suffers from some missing data)
timeSeriesNinjaPV <- read_csv(file = "input/ninja_europe_pv_v1/ninja_pv_europe_v1.1_merra2.csv")
timeSeriesNinjaPV
timeSeriesNinjaPV$time
locale()
myTimeSeriesNinjaPV <- timeSeriesNinjaPV %>%
gather(key = "region", value = "profile", -time) %>%
filter(
region %in% countriesToAnalyse,
between(time, dateTimeStart, dateTimeEnd)) %>%
add_column(technology = "PV")
myTimeSeriesNinjaPV$time
head(myTimeSeriesNinjaPV$time)
as.POSIXct(head(myTimeSeriesNinjaPV$time), tz = "CET")
str(head(myTimeSeriesNinjaPV$time))
as.character(as.POSIXct(head(myTimeSeriesNinjaPV$time), tz = "CET"))
with_tz(head(myTimeSeriesNinjaPV$time),"CET")
with_tz(head(myTimeSeriesNinjaPV$time),"CET")
# Overview:
myTimeSeriesNinja %>%
ggplot(mapping = aes(x = hours, y = profile)) +
geom_line() +
facet_grid(technology ~ region)
source("config.R")
warning("Timezone should be set correct, e.g. here all CET, and so first value be at 00:00 CET")
with_tz(head(myTimeSeriesNinjaPV$time),"CET")
with_tz(head(myTimeSeriesNinjaPV$time)[0],"CET")
with_tz(head(myTimeSeriesNinjaPV$time)[1],"CET")
warning("Timezone should be set correct, e.g. here all CET, and so first value be at 00:00 CET")
with_tz(head(myTimeSeriesNinjaPV$time),"CET")
source("config.R")
library(lubridate)
outputFile = paste0(outputPath, "renewablesNinja2015Profiles.csv")
outputFile
# Loading timeseries from https://data.open-power-system-data.org/time_series/2019-06-05
source("config.R")
library(lubridate)
outputFile = paste0(outputPath, "renewablesNinja2015Profiles.csv")
countriesToAnalyse <- c("DE","FR", "BE","NL","LU")
# 2015 as it is the last year with 8760 hours and full data. Also load profiles in model are from 2015
dateTimeStart <- as.POSIXct("2015-01-01 00:00:00", tz = "CET")
dateTimeEnd <-  as.POSIXct("2015-12-31 23:00:00", tz = "CET")
# Renewables Ninja Data ---------------------------------------------------
# Download current data from
# https://www.renewables.ninja/downloads
# MERRA-2 is better suited for long-term stability and overall consistency,
# SARAH for higher precision on hourly to daily time scales (but it suffers from some missing data)
timeSeriesNinjaPV <- read_csv(file = "input/ninja_europe_pv_v1/ninja_pv_europe_v1.1_merra2.csv")
timeSeriesNinjaWind <- read_csv(file = "input/ninja_europe_wind_v1/ninja_wind_europe_v1.1_current_on-offshore.csv")
# Wrangling ---------------------------------------------------------------
myTimeSeriesNinjaPV <- timeSeriesNinjaPV %>%
gather(key = "region", value = "profile", -time) %>%
filter(
region %in% countriesToAnalyse,
between(time, dateTimeStart, dateTimeEnd)) %>%
add_column(technology = "PV")
myTimeSeriesNinjaWind <- timeSeriesNinjaWind %>%
gather(key = "region_technology", value = "profile", -time) %>%
separate(region_technology, into = c("region", "technology")) %>%
filter(
region %in% countriesToAnalyse,
between(time, dateTimeStart, dateTimeEnd))
myTimeSeriesNinja <- bind_rows(myTimeSeriesNinjaPV, myTimeSeriesNinjaWind) %>%
mutate(
hours = as.double(time - dateTimeStart) / 3600 + 1)
# Test and output ---------------------------------------------------------
warning("Timezone should be set correct, e.g. here all CET, and so first value should be 00:00 CET")
with_tz(head(myTimeSeriesNinjaPV$time),"CET")
# Overview plot:
# myTimeSeriesNinja %>%
#   ggplot(mapping = aes(x = hours, y = profile)) +
#   geom_line() +
#   facet_grid(technology ~ region)
# Output
myTimeSeriesNinja %>%
unite(technology, region, sep = "_", col = "variable") %>%
select(variable, profile, hours) %>%
spread(key = hours, value = profile) %>%
rename(lengthInHours = variable) %>%
write_csv(path = outputFile)
# Output
myTimeSeriesNinja %>%
unite(technology, region, sep = "_", col = "variable") %>%
select(variable, profile, hours) %>%
spread(key = hours, value = profile) %>%
rename(lengthInHours = variable) %>%
write_csv(path = outputFile)
source("config.R")
library(lubridate)
outputFile = paste0(outputPath, "renewablesNinja2015Profiles.csv")
countriesToAnalyse <- c("DE","FR", "BE","NL","LU")
# 2015 as it is the last year with 8760 hours and full data. Also load profiles in model are from 2015
dateTimeStart <- as.POSIXct("2015-01-01 00:00:00", tz = "CET")
dateTimeEnd <-  as.POSIXct("2015-12-31 23:00:00", tz = "CET")
# MERRA-2 is better suited for long-term stability and overall consistency,
# SARAH for higher precision on hourly to daily time scales (but it suffers from some missing data)
timeSeriesNinjaPV <- read_csv(file = "input/ninja_europe_pv_v1/ninja_pv_europe_v1.1_merra2.csv")
timeSeriesNinjaWind <- read_csv(file = "input/ninja_europe_wind_v1/ninja_wind_europe_v1.1_current_on-offshore.csv")
myTimeSeriesNinjaPV <- timeSeriesNinjaPV %>%
gather(key = "region", value = "profile", -time) %>%
filter(
region %in% countriesToAnalyse,
between(time, dateTimeStart, dateTimeEnd)) %>%
add_column(technology = "PV")
myTimeSeriesNinjaWind <- timeSeriesNinjaWind %>%
gather(key = "region_technology", value = "profile", -time) %>%
separate(region_technology, into = c("region", "technology")) %>%
filter(
region %in% countriesToAnalyse,
between(time, dateTimeStart, dateTimeEnd))
myTimeSeriesNinja <- bind_rows(myTimeSeriesNinjaPV, myTimeSeriesNinjaWind) %>%
mutate(
hours = as.double(time - dateTimeStart) / 3600 + 1)
warning("Timezone should be set correct, e.g. here all CET, and so first value should be 00:00 CET")
with_tz(head(myTimeSeriesNinjaPV$time),"CET")
# Output
myTimeSeriesNinjaFinal <- myTimeSeriesNinja %>%
unite(technology, region, sep = "_", col = "variable") %>%
select(variable, profile, hours) %>%
spread(key = hours, value = profile) %>%
rename(lengthInHours = variable)
# MERRA-2 is better suited for long-term stability and overall consistency,
# SARAH for higher precision on hourly to daily time scales (but it suffers from some missing data)
timeSeriesNinjaPV <- read_csv(file = "input/ninja_europe_pv_v1/ninja_pv_europe_v1.1_merra2.csv")
# MERRA-2 is better suited for long-term stability and overall consistency,
# SARAH for higher precision on hourly to daily time scales (but it suffers from some missing data)
timeSeriesNinjaPV <- read_csv(file = "input/ninja_europe_pv_v1/ninja_pv_europe_v1.1_merra2.csv")
timeSeriesNinjaWind <- read_csv(file = "input/ninja_europe_wind_v1/ninja_wind_europe_v1.1_current_on-offshore.csv")
myTimeSeriesNinjaPV <- timeSeriesNinjaPV %>%
gather(key = "region", value = "profile", -time) %>%
filter(
region %in% countriesToAnalyse,
between(time, dateTimeStart, dateTimeEnd)) %>%
add_column(technology = "PV")
myTimeSeriesNinjaWind <- timeSeriesNinjaWind %>%
gather(key = "region_technology", value = "profile", -time) %>%
separate(region_technology, into = c("region", "technology")) %>%
filter(
region %in% countriesToAnalyse,
between(time, dateTimeStart, dateTimeEnd))
myTimeSeriesNinja <- bind_rows(myTimeSeriesNinjaPV, myTimeSeriesNinjaWind) %>%
mutate(
hours = as.double(time - dateTimeStart) / 3600 + 1)
warning("Timezone should be set correct, e.g. here all CET, and so first value should be 00:00 CET")
with_tz(head(myTimeSeriesNinjaPV$time),"CET")
# Output
myTimeSeriesNinjaFinal <- myTimeSeriesNinja %>%
unite(technology, region, sep = "_", col = "variable") %>%
select(variable, profile, hours) %>%
spread(key = hours, value = profile) %>%
rename(lengthInHours = variable)
save(myTimeSeriesNinjaFinal, file = "finalTimeSeries.RData")
myTimeSeriesNinjaFinal
myTimeSeriesNinja
save(myTimeSeriesNinja, file = "finalTimeSeries.RData")
source("config.R")
# MERRA-2 is better suited for long-term stability and overall consistency,
# SARAH for higher precision on hourly to daily time scales (but it suffers from some missing data)
timeSeriesNinjaPV <- read_csv(file = file.path(inputPath,"input/ninja_europe_pv_v1/ninja_pv_europe_v1.1_merra2.csv"))
# MERRA-2 is better suited for long-term stability and overall consistency,
# SARAH for higher precision on hourly to daily time scales (but it suffers from some missing data)
timeSeriesNinjaPV <- read_csv(file = file.path(inputPath,"ninja_europe_pv_v1/ninja_pv_europe_v1.1_merra2.csv"))
timeSeriesNinjaWind <- read_csv(file = file.path(inputPath,"ninja_europe_wind_v1/ninja_wind_europe_v1.1_current_on-offshore.csv"))
myTimeSeriesNinja %>%
View(myTimeSeriesNinja)
myTimeSeriesNinja %>%
filter(region %in% c("BE","FR","LU","NL")) %>%
group_by(time, profile, technology, hours) %>%
summarise()
myTimeSeriesNinja %>%
filter(region %in% c("BE","FR","LU","NL")) %>%
group_by(time, technology, hours) %>%
summarise(profile = mean(profile))
myTimeSeriesNinja %>%
filter(region %in% c("BE","FR","LU","NL")) %>%
group_by(time, technology, hours) %>%
summarise(profile = mean(profile)) %>%
ungroup() %>%
add_column(region = "FR_Benelux")
# Write output in correct format
write_profile <- function(filename){
myTimeSeriesNinja %>%
unite(technology, region, sep = "_", col = "variable") %>%
select(variable, profile, hours) %>%
spread(key = hours, value = profile) %>%
rename(lengthInHours = variable) %>%
write_csv(path = outputFile)
}
myTimeSeriesNinja_FR_Benelux <- myTimeSeriesNinja %>%
filter(region %in% c("BE","FR","LU","NL")) %>%
group_by(time, technology, hours) %>%
summarise(profile = mean(profile)) %>%
ungroup() %>%
add_column(region = "FR_Benelux")
myTimeSeriesNinja_DE <- myTimeSeriesNinja %>%
filter(region %in% c("DE"))
myTimeSeriesNinja_FR_Benelux
myTimeSeriesNinja_DE
bind_rows(myTimeSeriesNinja_FR_Benelux, myTimeSeriesNinja_DE) %>%
unite(technology, region, sep = "_", col = "variable") %>%
select(variable, profile, hours) %>%
spread(key = hours, value = profile) %>%
rename(lengthInHours = variable) %>%
write_csv(path = outputFile)
bind_rows(myTimeSeriesNinja_FR_Benelux, myTimeSeriesNinja) %>%
unite(technology, region, sep = "_", col = "variable") %>%
select(variable, profile, hours) %>%
spread(key = hours, value = profile) %>%
rename(lengthInHours = variable) %>%
write_csv(path = outputFile)
